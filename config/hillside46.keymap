/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// layer shortcuts, must match order in which they are defined below
#define DEF 0
#define NUM 1
#define NAV 2
#define HK 3
#define ADJ 4

#define Undo   LC(Z)
#define Redo   LC(Y)
#define Cut    LS(DEL)
#define Copy   LC(INS)
#define Paste  LS(INS)

#define XXX &none
#define ___ &trans

/* Settings */
#define QUICK_TAP_MS 175
#define COMBO_TERM_FAST 20
#define COMBO_TERM_SLOW 35

#include "combos.dtsi"

&mt {
	flavor = "balanced";
};
&sk {
        quick-release;
};
&caps_word {
        // Allow caps word to continue even when minus, delete, left or underscore are pressed.
        continue-list = <UNDERSCORE MINUS BACKSPACE DELETE LEFT>;
};

/ {
        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <1 2>;
                then-layer = <4>;
            };
        };
	behaviors {
                td0: td_ply_nxt {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TD_PLY_NXT";
                        #binding-cells = <0>;
                        tapping-term-ms = <280>;
                        bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREV>;
                };
                td1: td_mns_sls {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TD_MNS_SLS";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp KP_MINUS>, <&kp KP_SLASH>;
                };
                td2: td_pls_ast {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TD_PLS_AST";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp KP_PLUS>, <&kp KP_ASTERISK>;
                };
                gresc: grave_escape {
                        compatible = "zmk,behavior-mod-morph";
                        label = "GRAVE_ESCAPE";
                        #binding-cells = <0>;
                        bindings = <&kp ESC>, <&kp GRAVE>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                        keep-mods = <MOD_RSFT>;
                };
                hrm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        flavor = "tap-preferred";
                        tapping-term-ms = <200>;
                        quick-tap-ms = <QUICK_TAP_MS>;
                        global-quick-tap;
                        bindings = <&kp>, <&kp>;
                };
                // tap: sticky-shift | shift + tap / double-tap: caps-word | hold: shift
                ss_cw: capsword {
                        compatible = "zmk,behavior-mod-morph";
                        label = "CAPSWORD";
                        #binding-cells = <0>;
                        bindings = <&sk LSHFT>, <&caps_word>;
                        mods = <(MOD_LSFT)>;
                };
                cw_ht: behavior_mo_cw {
                    compatible = "zmk,behavior-hold-tap";
                        label = "cw_ht";
                        #binding-cells = <2>;
                        flavor = "hold-preferred";
                        tapping-term-ms = <200>;
                        bindings = <&mo>, <&ss_cw>;
                };
	};


        keymap {
                compatible = "zmk,keymap";

                default_layer {
/* QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Y   |   U   |   I   |   O   |   P   | BKSPC |
 * | TAB   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   ;   | ENTER |
 * | CTRL  |   Z   |   X   |   C   |   V   |   B   |  ESC  |-------------------|  CAPS |   N   |   M   |   ,   |   .   |   /   |   '   |
 *                                 |  GUI  |  ALT  |SK SHFT|  Nav  |---|  Sym  | SPACE |  ALT  |  GUI  |
 */
                        bindings = <
&kp GRAVE      &kp Q &kp W &kp E &kp R &kp T &kp Y                                                    &kp U   &kp I  &kp O   &kp P    &kp LBKT
&kp LA(LC(TAB)) &hrm LGUI A &hrm LALT S &hrm LSHIFT D &hrm LCTRL F  &kp G                             &kp H  &hrm RCTRL J &hrm RSHIFT K &hrm RALT L &hrm RGUI SEMI &kp SQT
&kp MINUS 	&kp Z &kp X &kp C &kp V &kp B   &kp ESC                                         XXX   &kp N  &kp M  &kp COMMA    &kp DOT &kp FSLH &kp BSLH
                                &kp BSPC &lt NUM TAB &lt NUM SPACE &lt HK RETURN     &lt HK RBKT &cw_ht NAV 0 &lt NAV BSPC &kp DEL
                        >;
                };
		
                numbers_layer {
/* NAV   
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | Copy  |   1   |   2   |   3   |   4   |   5   |-----------------------------------|   6   |   7   |   8   |   9   |   0   | BSPC  |
 * | Cut   |  GUI  |  Alt  | Ctrl  | Shift | Paste |-----------------------------------| PG UP |  Left |  Up   |  Down | Right | PG DN |
 * | Ctrl  |  F1   |  F2   |  F3   |  F4   |  F5   |  UnDo |-------------------| ReDo  |  F6   |  F7   |  F8   |  F9   |  F10  | Ctrl  |
 *                                 |       |       |       |       |---| ADJ_L |       |       |       |
 */
                        bindings = <
XXX             &kp EQUAL  &kp N7 &kp N8 &kp N9 &td1 &kp F6                 &kp F7   &kp F8   &kp F9   &kp F10  &kp F11
&kp ENTER    	&kp COLON  &kp N4 &kp N5 &kp N6 &td2                        &kp CARET   &hrm RCTRL AMPS &hrm RSHIFT STAR &hrm LALT LPAR &hrm RGUI RPAR &kp MINUS
&kp C_AL_CALC   &kp KP_DOT &kp N1 &kp N2 &kp N3 &kp N0 XXX              ___ ___    &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp KP_N0   XXX
                                                ___ ___ ___ ___ 	___ ___ ___ &kp F12 
                        >;
                };

                nav_layer {
/* SYM
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | INS   |   !   |   @   |   #   |   $   |   %   |-----------------------------------|   ^   |   &   |   *   |   (   |   )   | BSPC  |
 * |       |   \   |   -   |   =   |   [   |   ]   |-----------------------------------| HOME  | Shift | Ctrl  | Alt   | Gui   | END   |
 * | Ctrl  |   |   |   _   |   +   |   {   |   }   |SkAltGr|-------------------| MENU  | Mute  | Vol-  | Vol+  | Play  |       | Ctrl  |
 *                                 |       |       |       |  ADJ_L |---|      |       |       |       |
 */
                        bindings = <
XXX	        &kp F1      &kp F2 &kp F3   &kp F4      &kp F5                                  &kp HOME    &kp PG_DN   	&kp PG_UP       &kp END   		XXX &kp C_VOL_UP
&kp KP_EQUAL   &hrm LGUI EXCL  &hrm LALT AT &hrm LSHIFT HASH &hrm LCTRL DLLR               &kp PRCNT   &kp LEFT 	    &kp DOWN 	    &kp UP &kp RIGHT    XXX &td0
XXX         &kp KP_N1   &kp KP_N2 &kp KP_N3 &kp KP_N4 &kp KP_N5  ___                    ___  &kp LC(LEFT)  &kp LC(PG_DN)   &kp LC(PG_UP)   &kp LC(RIGHT)   XXX &kp C_VOL_DN
                                                        ___ ___ ___ ___             ___ ___ ___ ___
                        >;
                };

                hotkeys_layer {

                        bindings = <
&kp LA(F4) XXX &kp LG(N7) &kp LG(N8) &kp LG(N9) &kp LG(LC(LEFT))           XXX XXX XXX XXX XXX XXX
XXX        XXX &kp LG(N4) &kp LG(N5) &kp LG(N6) &kp LG(LC(RIGHT))          XXX XXX XXX XXX XXX XXX
&kp LG(Z)  XXX &kp LG(N1) &kp LG(N2) &kp LG(N3) &kp LG(N0) ___         ___ XXX XXX XXX XXX XXX XXX
                                        ___ ___ ___ ___    ___ ___ ___ ___
                        >;
                };
		
                adj_layer {
/* ADJUST
 * -------------------------------------------------------------------------------------------------------------------------------------
 * |       | QWERTY| DVORAK| COLEMK|       |       |-----------------------------------|       |  F11  |  F12  |Prt Scr|EP_OFF | EP_ON |
 * | RESET | BT 0  | BT 1  | BT 2  | BT 3  | BT 4  |-----------------------------------|       |       |       |       |       | RESET |
 * |       | LGUI  | LALT  | LCTRL | LSHIFT|       |BT CLR |-------------------|       |       |       |OUT_USB|OUT_BLE|       | BOOTL |
 *                                 |       |       |       |       |---|       |       |       |       |
 */
                        bindings = <
&none         &none &none &none &none         &none                                                                                       &none       &kp   F11       &kp   F12        &kp PRINTSCREEN   &ext_power EP_OFF  &ext_power EP_ON
&sys_reset    &bt  BT_SEL 0 &bt  BT_SEL 1 &bt  BT_SEL 2 &bt  BT_SEL 3 &bt  BT_SEL 4                                                       &none       &none           &none            &kp INS           &none           &sys_reset
&none         &kp  LGUI     &kp  LALT     &kp  LCTRL    &kp LSHIFT    &none         &bt BT_CLR                             &none      &none       &none           &out  OUT_USB    &out  OUT_BLE  &none           &bootloader
                                                        &trans        &trans        &trans        &trans         &trans    &trans     &trans      &trans 
                        >;
                };
        };
};